#pragma once

#include "base_player.h"

class c_ddd_player : public c_base_player {
public:
	m_netvar(get_stamina, float, "CDDDPlayer", "m_flStamina");
	m_netvar(get_is_sprinting, bool, "CDDDPlayer", "m_bIsSprinting");
	m_netvar(get_cling_coord, vector, "CDDDPlayer", "m_vecClingCoord");
	m_netvar(get_air_dash, bool, "CDDDPlayer", "m_bAirDash");
	m_netvar(get_wall_cling, bool, "CDDDPlayer", "m_bWallCling");
	m_netvar(get_ceiling_cling, bool, "CDDDPlayer", "m_bCeilingCling");
	m_netvar(get_run_speed, float, "CDDDPlayer", "m_flRunSpeed");
	m_netvar(get_sprint_speed, float, "CDDDPlayer", "m_flSprintSpeed");
	m_netvar(get_head_stuck, bool, "CDDDPlayer", "m_bHeadStuck");
	m_netvar(get_in_zoom, bool, "CDDDPlayer", "m_bInZoom");
	m_netvar(get_stored_origin, vector, "CDDDPlayer", "m_vecStoredOrigin");
	m_netvar(get_stored_eye_origin, vector, "CDDDPlayer", "m_vecStoredEyeOrigin");
	m_netvar(get_player_class, int, "CDDDPlayer", "m_iPlayerClass");
	m_netvar(get_desired_player_class, int, "CDDDPlayer", "m_iDesiredPlayerClass");
	m_netvar(get_armor_value, int, "CDDDPlayer", "m_ArmorValue");
	m_netvar(get_player_state, int, "CDDDPlayer", "m_iPlayerState");
	m_netvar(get_previous_player_state, int, "CDDDPlayer", "m_iPreviousPlayerState");
	m_netvar(get_victim, unsigned long, "CDDDPlayer", "m_hVictim");
	m_netvar(get_target, unsigned long, "CDDDPlayer", "m_hTarget");
	m_netvar(get_next_special_attack, float, "CDDDPlayer", "m_flNextSpecialAttack");
	m_netvar(get_target_location, vector, "CDDDPlayer", "m_vecTargetLocation");
	m_netvar(get_in_refill, bool, "CDDDPlayer", "m_bInRefill");
	m_netvar(get_is_baited, bool, "CDDDPlayer", "m_bIsBaited");
	m_netvar(get_bait_distance, float, "CDDDPlayer", "m_flBaitDistance");
	m_netvar(get_is_feeding, bool, "CDDDPlayer", "m_bIsFeeding");
	m_netvar(get_paralysis, bool, "CDDDPlayer", "m_bParalysis");
	m_netvar(get_is_berserk, bool, "CDDDPlayer", "m_bIsBerserk");
	m_netvar(get_berserk_ready, bool, "CDDDPlayer", "m_bBerserkReady");
	m_netvar(get_poisoning, bool, "CDDDPlayer", "m_bPoisoning");
	m_netvar(get_poisoned, bool, "CDDDPlayer", "m_bPoisoned");
	m_netvar(get_is_victim, bool, "CDDDPlayer", "m_bIsVictim");
	m_netvar(get_special_class, int, "CDDDPlayer", "m_iSpecialClass");
	m_netvar(get_is_capturing, bool, "CDDDPlayer", "m_bIsCapturing");
	m_netvar(get_is_healing, bool, "CDDDPlayer", "m_bIsHealing");
	m_netvar(get_is_healer, bool, "CDDDPlayer", "m_bIsHealer");
	m_netvar(get_weapon_sighted, bool, "CDDDPlayer", "m_bWeaponSighted");
	m_netvar(get_facing, vector, "CDDDPlayer", "m_vecFacing");
	m_netvar(get_thrown, bool, "CDDDPlayer", "m_bThrown");
	m_netvar(get_bite_victim, bool, "CDDDPlayer", "m_bBiteVictim");
	m_netvar(get_is_bite_attacker, bool, "CDDDPlayer", "m_bBiteAttacker");
	m_netvar(get_bite_state, int, "CDDDPlayer", "m_iBiteState");
	m_netvar(get_bite_attacker, unsigned long, "CDDDPlayer", "m_hBiteAttacker");
	m_netvar(get_is_carrying_satchel, bool, "CDDDPlayer", "m_bIsCarryingSatchel");
	m_netvar(get_is_defusing_satchel, bool, "CDDDPlayer", "m_bDefusingSatchel");
	m_netvar(get_big_dinosaur_spawn_timer, int, "CDDDPlayer", "m_nBigDinosaurSpawnTimer");
	m_netvar(get_big_dinosaur_class, int, "CDDDPlayer", "m_iBigDinosaurClass");
	m_netvar(get_wants_medic, bool, "CDDDPlayer", "m_bWantsMedic");
	m_netvar(get_carrying_bomb, bool, "CDDDPlayer", "m_bCarryingBomb");
	m_netvar(get_is_being_healed, bool, "CDDDPlayer", "m_bIsBeingHealed");
	m_netvar(get_powerup, int, "CDDDPlayer", "m_iPowerup");
	m_netvar(get_companion_slot, int, "CDDDPlayer", "m_iCompanionSlot");
	m_netvar(get_spawn_armor_value, int, "CDDDPlayer", "m_iSpawnArmorValue");
	m_netvar(get_gold, int, "CDDDPlayer", "m_iGold");
	m_netvar(get_can_open_quartermaster, bool, "CDDDPlayer", "m_bCanOpenQuartermaster");
	m_netvar(get_debriefvote, int, "CDDDPlayer", "m_iDebriefVote");
	m_netvar(get_last_death_weapon, int, "CDDDPlayer", "m_iLastDeathWeapon");
	m_netvar(get_last_death_enemy, int, "CDDDPlayer", "m_iLastDeathEnemy");
	m_netvar(get_valor_event_3, int, "CDDDPlayer", "m_iValorEvent3");
	m_netvar(get_favorite_weapon, int, "CDDDPlayer", "m_iFavoriteWeapon");
	m_netvar(get_nearby_teammates, int, "CDDDPlayer", "m_iNearbyTeammates");
	m_netvar(get_ability_recharge_progress, float, "CDDDPlayer", "m_flAbilityRechargeProgress");
	m_netvar(get_is_invulnerable, bool, "CDDDPlayer", "m_bIsInvulnerable");
	m_netvar(get_explosive_bullets, bool, "CDDDPlayer", "m_bExplosiveBullets");
	m_netvar(get_magic_bullets, bool, "CDDDPlayer", "m_bMagicBullets");
	m_netvar(get_instakill, bool, "CDDDPlayer", "m_bInstakill");
	m_netvar(get_is_legendary, bool, "CDDDPlayer", "m_bIsLegendary");
	m_netvar(get_summoned, bool, "CDDDPlayer", "m_bSummoned");
	m_netvar(get_current_run_speed, float, "CDDDPlayer", "m_flCurrentRunSpeed");
	m_netvar(get_current_sprint_speed, float, "CDDDPlayer", "m_flCurrentSprintSpeed");
	m_netvar(get_is_red_baron, bool, "CDDDPlayer", "m_bIsRedBaron");
	m_netvar(get_is_ready, bool, "CDDDPlayer", "m_bIsReady");
	m_netvar(get_special_active, bool, "CDDDPlayer", "m_bSpecialActive");
	m_netvar(get_armor_debuff, float, "CDDDPlayer", "m_flArmorDebuff");
	m_netvar(ger_doing_rocket_barrage, bool, "CDDDPlayer", "m_bDoingRocketBarrage");
	m_netvar(get_do_stun_attack, bool, "CDDDPlayer", "m_bDoStunAttack");
	m_netvar(get_is_red_baron_retreating, bool, "CDDDPlayer", "m_bIsRedBaronRetreating");
};